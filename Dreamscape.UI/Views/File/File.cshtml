@model Dreamscape.UI.ViewModels.FileViewModel;

@using System.Security.Claims;
@using Dreamscape.Domain.Entities

@{
    ViewData["Title"] = $"Download {string.Join(", ", Model.Image.Tags.Select(t => t.Name))} image free";
}

@section metatags {
    <meta name="content" content="Download @string.Join(", ", @Model.Image.Tags.Select(t => t.Name)) @Model.Image.Resolution.Width x @Model.Image.Resolution.Height image for free" />
    <meta name="description" content="Download high-quality images for free with tags: @string.Join(", ", @Model.Image.Tags.Select(t => t.Name))" />
    <meta name="keywords" content="@string.Join(", ", @Model.Image.Tags.Select(t => t.Name)), download, free, @Model.Image.Resolution.Width x @Model.Image.Resolution.Height" />
}

<div class="file container flex-row">

    <div class="sidebar file__info-sidebar">

        @await Html.PartialAsync("_UserCard", Model.Image.Uploader)

        <div class="color-palette">
            @foreach (var color in Model.Image.Colors)
            {
                <div class="color-rectangle" style="background-color: rgba(@color.R, @color.G, @color.B, @color.A)"></div>
            }
        </div>

        <div class="file-info pt-5 px-10">

            <a class="file-resolution mt-10" asp-controller="File" asp-action="Files" asp-route-resolutions="@(Model.Image.Resolution.Width + "x" + Model.Image.Resolution.Height)">
                @Model.Image.Resolution.Width x @Model.Image.Resolution.Height
            </a>

            <div class="sub-file-info">

                <div>
                    @Model.Image.DataCreated.DateTime
                </div>

                <div>
                    @Math.Round((Model.Image.Length / 1048576), 3)Mb
                </div>

            </div>

        </div>

        <form class="pt-5 px-10" method="post" asp-action="Download" asp-controller="File" asp-route-id="@Model.Image.Id" enctype="multipart/form-data">
            <button class="animated-btn" type="submit">
                <div class="flex-row justify-content-space-between align-items-center">
                    <span>Download</span>
                    <span class="material-symbols-outlined">download</span>
                </div>
            </button>
        </form>

        @if (!Model.IsInUserCollection)
        {
            <div class="pt-5 px-10">
                <button class="animated-btn" type="submit" onclick="showAddToCollectionForm()">
                    <div class="flex-row justify-content-space-between align-items-center">
                        <span>Add to collection</span>
                        <span class="material-symbols-outlined">bookmark</span>
                    </div>
                </button>
            </div>
        }
        else
        {
            <div class="pt-5 px-10">
                <button class="animated-btn" type="submit">
                    <div class="flex-row justify-content-space-between align-items-center">
                        <span>Remove from collection</span>
                        <span class="material-symbols-outlined">bookmark</span>
                    </div>
                </button>
            </div>
        }

        <form class="pt-5 px-10" method="get" asp-action="Resize" asp-controller="File" asp-route-Id="@Model.Image.Id">
            <button class="animated-btn" type="submit">
                <div class="flex-row justify-content-space-between align-items-center">
                    <span>Resize</span>
                    <span class="material-symbols-outlined">aspect_ratio</span>
                </div>
            </button>
        </form>

        @if (@Model.Image.UploaderId == @User.FindFirstValue(ClaimTypes.NameIdentifier) || @User.IsInRole("Admin"))
        {
            <form class="pt-5 px-10" method="post" asp-action="Delete" asp-controller="File" asp-route-id="@Model.Image.Id" enctype="multipart/form-data">
                <button class="animated-btn" type="submit">
                    <div class="flex-row justify-content-space-between align-items-center">
                        <span>Delete</span>
                        <span class="material-symbols-outlined">delete</span>
                    </div>
                </button>
            </form>
        }

        @if (Model.Image.UploaderId == @User.FindFirstValue(ClaimTypes.NameIdentifier))
        {
            <form class="add-tag-form pt-5 px-10" method="post" asp-action="AddTag" asp-controller="File" asp-route-fileId="@Model.Image.Id" enctype="multipart/form-data">
                <input name="tagName" />
                <button class="animated-btn" type="submit">
                    <div class="flex-row justify-content-center align-items-center">
                        <span class="material-symbols-outlined">add_box</span>
                    </div>
                </button>
            </form>
        }

        <div class="tag-list pt-5 px-10 pb-5">
            @foreach (var tag in Model.Image.Tags)
            {
                <div class="flex-row">

                    <a class="tag-list__link" asp-controller="File" asp-action="Files" asp-route-tags="@tag.Name">
                        <span class="tag-list__tag">
                            @tag.Name
                        </span>
                    </a>

                    @if (Model.Image.UploaderId == @User.FindFirstValue(ClaimTypes.NameIdentifier))
                    {
                        <form method="post" asp-action="RemoveTag" asp-controller="File" asp-route-fileId="@Model.Image.Id" asp-route-tagName="@tag.Name" enctype="multipart/form-data">
                            <button class="tag__delete-btn" type="submit">
                                <div class="flex-row justify-content-center align-items-center">
                                    <span class="material-symbols-outlined">close</span>
                                </div>
                            </button>
                        </form>
                    }
                </div>
            }
        </div>
    </div>

    <div class="image-box">
        <img src="@Model.Image.FullSizePath" />
    </div>

    <div class="sidebar file__similar-files">
        @if (Model.SimilarImages != null)
        {
            <div class="similar-files">
                @foreach (var file in Model.SimilarImages.Items)
                {
                    <div class="file-gallery__container">
                        <a asp-action="File" asp-controller="File" asp-route-id="@file.Id">
                            <img class="container file-gallery__img"
                                 src="@file.DisplaySizePath">
                        </a>
                        <div class="file-gallery__conainer-overlay">
                            @file.Resolution.Width x @file.Resolution.Height
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

<div id="myModal" class="modal">
    <div class="modal-content">
    </div>
</div>

@section Scripts {
    <script>
        var modal = document.getElementById('myModal');

        function openModal() {
            modal.style.display = 'flex';
            $('html, body').css({
                overflow: 'hidden',
            });
        }

        function closeModal() {
            modal.style.display = 'none';
            $('html, body').css({
                overflow: 'auto',
            });
        }

        function showAddToCollectionForm() {
            $.ajax({
                url: "/Collection/User",
                type: 'Get',
                success: function (data) {

                    var modalContent = $('.modal-content');
                    modalContent.empty();

                    var imagePreview = $('<div class="add-to-collection-image-preview">');
                    imagePreview.append('<img src="@Model.Image.FullSizePath">');
                    modalContent.append(imagePreview);

                    var addToCollectionForm = $('<div class="add-to-collection-form">');
                    addToCollectionForm.append('<h2>Add to Collection</h2>')
                    addToCollectionForm.append('<button class="animated-btn" onclick="showCreateCollectionForm()">Create a new collection</button>');
                    addToCollectionForm.append('<button class="animated-btn" onclick="autoAppendToCollection()">Auto select</button>');

                    var collectionListDiv = $('<div class="collection__list">');
                    data.items.forEach(function (collection) {
                        var collectionDiv = $('<div class="collection" id="' + collection.id + '">');
                       
                        if (collection.files.some(file => file.id === '@Model.Image.Id')) {
                            collectionDiv.addClass('in-collection');
                        }

                        collectionDiv.on('click', function () {
                            toogleCollection(collection.id);
                        });

                        collectionDiv.append('<div class="collection__name">' + collection.name + '</div>');

                        var collectionTagsDiv = $('<div class="tag-list">');
                        collection.tags.forEach(function (tag) {
                            var tagSpan = $('<span class="tag-list__tag">' + tag.name + '</span>');
                            collectionTagsDiv.append(tagSpan);
                        });

                        collectionDiv.append(collectionTagsDiv);
                        collectionListDiv.append(collectionDiv);
                    });

                    addToCollectionForm.append(collectionListDiv);

                    modalContent.append(addToCollectionForm);
                    openModal();
                }
            });
        }

        function showCreateCollectionForm() {
            var modalContent = $('.modal-content');
            modalContent.empty();

            var imagePreview = $('<div class="add-to-collection-image-preview">');
            imagePreview.append('<img src="@Model.Image.FullSizePath">');
            modalContent.append(imagePreview);

            var addToCollectionForm = $('<div class="add-to-collection-form">');
            addToCollectionForm.append('<h2>Create new collection</h2>')
            addToCollectionForm.append('<label>Name</>')
            addToCollectionForm.append('<input type="text" name="collectionName" placeholder="Collection Name" required>');
            addToCollectionForm.append('<label>Description</>')
            addToCollectionForm.append('<textarea type="text" name="collectionDescription" placeholder="Collection Description" required>');

            var rememberDiv = $('<div class="remember-div">');
            rememberDiv.append('<input type="checkbox" name="privateCollection"/>');
            rememberDiv.append('<label>Private collection</label>');

            addToCollectionForm.append(rememberDiv);
            addToCollectionForm.append('<button class="animated-btn" onclick="submitCreateForm()">Create</button>');
            addToCollectionForm.append('<button class="animated-btn" onclick="showAddToCollectionForm()">Back</button>');

            modalContent.append(addToCollectionForm);
        }

        function toogleCollection(collectionId) {
            var collectionDescription = $('#' + collectionId);
            var isInCollection = collectionDescription.hasClass('in-collection');

            if (isInCollection) {
                removeFromCollection(collectionId);
            } else {
                appendToCollection(collectionId);
            }
        }

        function createCollection(name, description, fileId, isPrivate) {
            $.ajax({
                url: "/Collection/Create",
                type: 'POST',
                data: {
                    name: name,
                    description: description,
                    filesId: [fileId],
                    isPrivate: isPrivate
                },
                success: function () {
                    showAddToCollectionForm();
                }
            });
        }

        function appendToCollection(collectionId) {
            $.ajax({
                url: "/Collection/Append",
                type: 'POST',
                data: {
                    collectionId: collectionId,
                    fileId: '@Model.Image.Id'
                },
                success: function () {
                    showAddToCollectionForm();
                }
            });
        }

        function autoAppendToCollection() {
            $.ajax({
                url: "/Collection/AutoAppend",
                type: 'POST',
                data: {
                    fileId: '@Model.Image.Id'
                },
                success: function () {
                    showAddToCollectionForm();
                }
            });
        }

        function removeFromCollection(collectionId) {
            $.ajax({
                url: "/Collection/Remove",
                type: 'POST',
                data: {
                    collectionId: collectionId,
                    fileId: '@Model.Image.Id'
                },
                success: function () {
                    showAddToCollectionForm();
                }
            });
        }

        function submitCreateForm() {
            var collectionName = $('input[name="collectionName"]').val();
            var collectionDescription = $('textarea[name="collectionDescription"]').val();
            var fileId = '@Model.Image.Id';
            var isPrivate = $('input[name="privateCollection"]').is(":checked");
            console.log(isPrivate);
            createCollection(collectionName, collectionDescription, fileId, isPrivate);
        }

        window.onclick = function (event) {
            if (event.target === modal) {
                closeModal();
            }
        };

        function openFullscreen(element) {
            if (element.requestFullscreen) {
                element.requestFullscreen();
            } else if (element.mozRequestFullScreen) {
                element.mozRequestFullScreen();
            } else if (element.webkitRequestFullscreen) {
                element.webkitRequestFullscreen();
            } else if (element.msRequestFullscreen) {
                element.msRequestFullscreen();
            }
        }

        function closeFullscreen() {
            if (document.exitFullscreen) {
                document.exitFullscreen();
            } else if (document.mozCancelFullScreen) {
                document.mozCancelFullScreen();
            } else if (document.webkitExitFullscreen) {
                document.webkitExitFullscreen();
            } else if (document.msExitFullscreen) {
                document.msExitFullscreen();
            }
        }

        document.querySelector('.image-box img').addEventListener('click', function () {
            var isInFullScreen = (document.fullscreenElement && document.fullscreenElement !== null) ||
                (document.mozFullScreen || document.webkitIsFullScreen);

            if (isInFullScreen) {
                closeFullscreen();
            } else {
                openFullscreen(this);
            }
        });

    </script>
}